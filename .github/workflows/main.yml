name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger this workflow on pushes to the main branch

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout Code
      uses: actions/checkout@v2

    # Step 2: Set up Docker Buildx (to build multi-platform images if needed)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # Step 3: Log in to Docker Hub
    - name: Log in to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

    # Step 4: Build and Push Docker Image to Docker Hub
    - name: Build and Push Docker Image
      env:
        IMAGE_NAME: docker.io/${{ secrets.DOCKER_USERNAME }}/nginx-custom:latest
      run: |
        docker build -t $IMAGE_NAME .
        docker push $IMAGE_NAME

    # Step 5: Deploy the Docker Image to OpenShift
    - name: Deploy to OpenShift
      env:
        OPENSHIFT_API_URL: ${{ secrets.OPENSHIFT_API_URL }}
        OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
        NAMESPACE: ${{ secrets.NAMESPACE }}
        IMAGE_NAME: docker.io/${{ secrets.DOCKER_USERNAME }}/nginx-custom:latest
      run: |
        # Patch the deployment in OpenShift to use the new image
        curl -X PATCH "${OPENSHIFT_API_URL}/apis/apps/v1/namespaces/$NAMESPACE/deployments/nginx-deployment" \
          -H "Authorization: Bearer $OPENSHIFT_TOKEN" \
          -H "Content-Type: application/merge-patch+json" \
          -d '{"spec": {"template": {"spec": {"containers": [{"name": "nginx", "image": "'"$IMAGE_NAME"'"}]}}}}'
